function Lander.new 0
push constant 18
call Memory.alloc 1
pop pointer 0
push argument 2
pop this 17
push argument 0
pop this 0
push argument 1
pop this 1
push constant 12
pop this 11
push this 11
push constant 4
call Math.divide 2
pop this 9
push this 11
push this 9
sub
pop this 10
push this 11
push constant 2
call Math.divide 2
pop this 12
push this 11
push constant 3
call Math.divide 2
pop this 13
push this 11
push this 13
sub
pop this 14
push constant 510
push this 11
sub
pop this 15
push constant 254
push this 11
sub
pop this 16
push constant 6
pop this 2
push constant 4
pop this 3
push constant 750
pop this 7
push constant 0
pop this 6
push constant 10
pop this 8
push this 8
push constant 1
add
pop this 4
push constant 1
neg
push this 8
sub
pop this 5
push constant 4
call String.new 1
push constant 70
call String.appendChar 2
push constant 85
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 7
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 4
call String.new 1
push constant 84
call String.appendChar 2
push constant 72
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 4
call String.new 1
push constant 72
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 4
call String.new 1
push constant 86
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
call Lander.drawLander 1
pop temp 0
push pointer 0
return
function Lander.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Lander.mainThruster 0
push argument 0
pop pointer 0
push this 6
push constant 10
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 1
add
pop this 6
push this 7
push this 6
sub
pop this 7
label IF_FALSE0
push pointer 0
push constant 0
push constant 0
push this 6
sub
call Lander.moveLander 3
pop temp 0
push constant 0
return
function Lander.rightThruster 0
push argument 0
pop pointer 0
push this 7
push constant 1
sub
pop this 7
push pointer 0
push constant 1
neg
push constant 0
push this 6
sub
call Lander.moveLander 3
pop temp 0
push constant 0
return
function Lander.leftThruster 0
push argument 0
pop pointer 0
push this 7
push constant 1
sub
pop this 7
push pointer 0
push constant 1
push constant 0
push this 6
sub
call Lander.moveLander 3
pop temp 0
push constant 0
return
function Lander.negThruster 0
push argument 0
pop pointer 0
push this 6
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 1
sub
pop this 6
label IF_FALSE0
push this 7
push this 6
sub
pop this 7
push pointer 0
push constant 0
push constant 0
push this 6
sub
call Lander.moveLander 3
pop temp 0
push constant 0
return
function Lander.noThruster 0
push argument 0
pop pointer 0
push this 7
push this 6
sub
pop this 7
push pointer 0
push constant 0
push constant 0
push this 6
sub
call Lander.moveLander 3
pop temp 0
push constant 0
return
function Lander.moveLander 9
push argument 0
pop pointer 0
push argument 2
push constant 2
add
pop argument 2
push this 3
push argument 2
add
push this 4
lt
push this 3
push argument 2
add
push this 5
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push argument 2
add
pop this 3
label IF_FALSE0
push this 2
push argument 1
add
push this 4
lt
push this 2
push argument 1
add
push this 5
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push argument 1
add
pop this 2
label IF_FALSE1
push this 3
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 3
sub
pop local 3
push constant 1
neg
pop local 2
goto IF_END2
label IF_FALSE2
push this 3
pop local 3
push constant 1
pop local 2
label IF_END2
push local 3
push constant 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 8
pop local 1
goto IF_END3
label IF_FALSE3
push this 8
push local 3
call Math.divide 2
pop local 1
label IF_END3
push this 2
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push this 2
sub
pop local 7
push constant 1
neg
pop local 6
goto IF_END4
label IF_FALSE4
push this 2
pop local 7
push constant 1
pop local 6
label IF_END4
push local 7
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 8
pop local 5
goto IF_END5
label IF_FALSE5
push this 8
push local 7
call Math.divide 2
pop local 5
label IF_END5
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push constant 0
pop local 4
push constant 0
pop local 8
push local 0
push local 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 2
pop local 4
push local 1
push local 1
add
pop local 1
label IF_FALSE6
push local 0
push local 5
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 6
pop local 8
push local 5
push local 5
add
pop local 5
label IF_FALSE7
push pointer 0
push local 8
push local 4
call Lander.move 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Lander.move 0
push argument 0
pop pointer 0
push this 0
push argument 1
add
push constant 1
lt
push this 0
push argument 1
add
push this 15
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop argument 1
label IF_FALSE0
push this 1
push argument 2
add
push constant 1
lt
push this 1
push argument 2
add
push this 16
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop argument 2
label IF_FALSE1
push pointer 0
call Lander.eraseLander 1
pop temp 0
push this 0
push argument 1
add
pop this 0
push this 1
push argument 2
add
pop this 1
push pointer 0
call Lander.drawLander 1
pop temp 0
push constant 0
return
function Lander.eraseLander 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 17
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push this 10
add
push this 6
add
push this 6
add
push this 16
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
push this 0
push this 11
add
push this 1
push this 10
add
push this 6
add
push this 6
add
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push this 0
push this 1
push this 0
push this 11
add
push this 1
push this 11
add
call Screen.drawRectangle 4
pop temp 0
label IF_END1
goto IF_END0
label IF_FALSE0
push this 0
push this 1
call Screen.drawPixel 2
pop temp 0
label IF_END0
push constant 0
return
function Lander.drawLander 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push constant 6
call Output.moveCursor 2
pop temp 0
push constant 0
push constant 5
call Output.moveCursor 2
pop temp 0
push constant 0
push constant 4
call Output.moveCursor 2
pop temp 0
push this 7
call Output.printInt 1
pop temp 0
push constant 1
push constant 6
call Output.moveCursor 2
pop temp 0
push constant 1
push constant 5
call Output.moveCursor 2
pop temp 0
push constant 1
push constant 4
call Output.moveCursor 2
pop temp 0
push this 6
call Output.printInt 1
pop temp 0
push constant 2
push constant 6
call Output.moveCursor 2
pop temp 0
push constant 2
push constant 5
call Output.moveCursor 2
pop temp 0
push constant 2
push constant 4
call Output.moveCursor 2
pop temp 0
push this 2
call Output.printInt 1
pop temp 0
push constant 3
push constant 6
call Output.moveCursor 2
pop temp 0
push constant 3
push constant 5
call Output.moveCursor 2
pop temp 0
push constant 3
push constant 4
call Output.moveCursor 2
pop temp 0
push this 3
call Output.printInt 1
pop temp 0
push this 17
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 9
add
push this 1
push this 0
push this 10
add
push this 1
call Screen.drawLine 4
pop temp 0
push this 0
push this 10
add
push this 1
push this 0
push this 11
add
push this 1
push this 9
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 11
add
push this 1
push this 9
add
push this 0
push this 11
add
push this 1
push this 10
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 11
add
push this 1
push this 10
add
push this 0
push this 1
push this 10
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push this 10
add
push this 0
push this 1
push this 9
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 1
push this 9
add
push this 0
push this 9
add
push this 1
call Screen.drawLine 4
pop temp 0
push this 0
push this 13
add
push this 1
push this 10
add
push this 0
push this 1
push this 11
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 14
add
push this 1
push this 10
add
push this 0
push this 11
add
push this 1
push this 11
add
call Screen.drawLine 4
pop temp 0
push this 1
push this 10
add
push this 6
add
push this 6
add
push this 16
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 13
add
push this 1
push this 10
add
push this 0
push this 12
add
push this 1
push this 10
add
push this 6
add
push this 6
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 14
add
push this 1
push this 10
add
push this 0
push this 12
add
push this 1
push this 10
add
push this 6
add
push this 6
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push this 0
push this 1
call Screen.drawPixel 2
pop temp 0
label IF_END0
push constant 0
return
