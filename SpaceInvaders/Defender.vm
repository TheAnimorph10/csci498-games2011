function Defender.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push constant 0
pop this 0
push constant 234
pop this 1
push pointer 0
call Defender.draw 1
pop temp 0
push pointer 0
return
function Defender.moveLeft 0
push argument 0
pop pointer 0
push this 0
push this 2
sub
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 2
sub
pop this 0
push pointer 0
call Defender.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Defender.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push this 2
add
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 2
add
pop this 0
push pointer 0
call Defender.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Defender.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Defender.getX 0
push argument 0
pop pointer 0
push this 0
return
function Defender.getSize 0
push argument 0
pop pointer 0
push this 2
return
function Defender.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Defender.die 0
push argument 0
pop pointer 0
push constant 0
return
